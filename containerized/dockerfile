#########################################################################
# -- Author: Amos Folarin                                               #
# -- Organisation: KCL/SLaM                                             #
# -- Email: amosfolarin@gmail.com                                       #
#########################################################################


#------------------------------------------------------------------------
# This dockerfile should build the enviroment required for the ngs 
# pipeline. Of course you can just get the docker container pre-built
# from our repository
#------------------------------------------------------------------------


# Base image will be Trusty
FROM ubuntu:trusty

# Maintainer Amos Folarin
MAINTAINER Amos Folarin amosfolarin@gmail.com

# Required basic stuff, make, gcc, wget etc
RUN apt-get update
RUN apt-get install -y make tabix
RUN apt-get install -y gcc g++
RUN apt-get install -y wget unzip
RUN apt-get install zlib1g-dev

# Mount a volume external to the container to store stuff that needs to persist
# VOLUME ["/home/ngsEasy/data"]

# Set up file structure
# RUN mkdir /pipeln
# FASTQ Staging Area
#RUN bash mkdir /pipeln/staging/ ## !!! this should be in an external volume !!!!
# REF Data
#RUN bash mkdir /pipeln/refdata ## !!! this should be in an external volume!!!!!
# Results Folder by projetc and sample


# Create a pipeline user
RUN useradd -m -s /bin/bash pipeman && cd /home/pipeman && echo "#bash config file for user pipeman" >> /home/pipeman/.bashrc


#------------------ INSTALL PIPELINE COMPONENTS --------------------------

#---------------------- Sequence Aligners --------------------------------
# 1)*novoalign*  2)bowtie, 3)bwa, 4) stampy

# + bowtie
RUN wget -O /tmp/bowtie2-2.2.3-linux-x86_64.zip http://sourceforge.net/projects/bowtie-bio/files/bowtie2/2.2.3/bowtie2-2.2.3-linux-x86_64.zip/download \
    && unzip /tmp/bowtie2-2.2.3-linux-x86_64.zip -d /usr/lib/ \
    && sed  -i '$aPATH=${PATH}:/usr/lib/bowtie2-2.2.3' /home/pipeman/.bashrc 


#---------------------- SAM/BAM Processing -------------------------------
# + VCFtools: http://vcftools.sourceforge.net/index.html
RUN wget -O /tmp/vcftools_0.1.12a.tar.gz http://sourceforge.net/projects/vcftools/files/vcftools_0.1.12a.tar.gz/download \
    && tar xzvf /tmp/vcftools_0.1.12a.tar.gz -C /usr/lib/  \
    && cd /usr/lib/vcftools_0.1.12a/ && make \
    && sed  -i '$aPATH=${PATH}:/usr/lib/vcftools_0.1.12a/bin' /home/pipeman/.bashrc



#---------------------- SNP/INDEL Calling --------------------------------

# + GATK (see licence, and registration) 
# use ADD to copy the downloaded GATK binary from <buildcontext_path>/GenomeAnalysisTK-3.1-1.tar.bz2 to the /tmp dir in the container
ADD ./GenomeAnalysisTK-3.1-1.tar.bz2 /tmp/GenomeAnalysisTK-3.1-1.tar.bz2

RUN mkdir /usr/lib/GenomeAnalysisTK-3.1-1 \
    && tar xjvf /tmp/GenomeAnalysisTK-3.1-1.tar.bz2 -C /usr/lib/GenomeAnalysisTK-3.1-1 \
    && sed -i '$aPATH=${PATH}:/usr/lib/GenomeAnalysisTK-3.1-1' /home/pipeman/.bashrc

#---------------------- Visualisations -----------------------------------



#------------------ Variant Annotation & Reports -------------------------
# + ANNOVAR (see licence, and registration)





#----------------------  --------------------------------



#----------------------  --------------------------------



#----------------------  --------------------------------











# Cleanup the temp dir
RUN rm -rf /tmp/*



# Add an entrypoint or CMD that runs the pipeline, taking in the config file to parameterize
#ENTRYPOINT ["/app/init"]
#CMD ["app:start"]

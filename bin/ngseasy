#!/bin/bash -e -x

################################################################
# Program: ngseasy
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
#################################################################

## Set version and run date
#
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

###########################################################################################
## test if docker is intsalled and exit if not
#
command -v docker >/dev/null 2>&1 || { echo -e "Docker not installed.\nAborting." >&2; exit 1; }
DOCKERVERSION=`docker version`
DOCKERINFO=`docker info`
echo -e "\n"[`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]" 
echo -e "\n---\nDocker Version\n---\n${DOCKERVERSION}\n---\n"Docker Info"\n---\n${DOCKERINFO}\n---\n"
echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]"  >> ${HOME}/ngseasy_logs/${USER}.${RUNDATE}.NGSEASY.log
echo -e "\n---\nDocker Version\n---\n${DOCKERVERSION}\n---\n"Docker Info"\n---\n${DOCKERINFO}\n---\n" >> ${HOME}/ngseasy_logs/${USER}.${RUNDATE}.NGSEASY.log

###########################################################################################
## global logging fuction
#
function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

###########################################################################################
## global usage
#
function usage_ngseasy() {
    echo "
Program: ngseasy
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy_full -c <config_file> -d <project_directory> -p 1 -f 1

options:  -c  configuration file
          -d  project directory
          -p  initiate project. Options: 1 or 0
          -f  initiate fastq files. Option 1 or 0
          -h  show this message 
"
}

###########################################################################################
## check and make ~/ngseasy_logs if needed
#
if [[ ! -e  ${HOME}/ngseasy_logs ]]
then
  mkdir ${HOME}/ngseasy_logs
  global_run_logs="${HOME}/ngseasy_logs"
  logger_ngseasy "making ${HOME}/ngseasy_logs" ${HOME}/ngseasy_logs/${RUNDATE}.NGSEASY
else
  logger_ngseasy "${HOME}/ngseasy_logs exists" ${HOME}/ngseasy_logs/${RUNDATE}.NGSEASY
fi

## example config: https://docs.google.com/spreadsheets/d/1VWqmMffkVDnvOtRJGlPqOYzXWnIN_IONXQHDAawaN5Q/edit#gid=0

###########################################################################################
## default options
#
make_dirs=0
set_fastq=0

###########################################################################################
## get options for command line args
#
while  getopts "hc:d:pf" opt
do

  case ${opt} in

   h)
   usage_ngseasy #print help
   exit 0
   ;;

   c)
   config_tsv=${OPTARG}
   echo "-c = ${config_tsv}"
   ;;

   d)
   project_directory=${OPTARG}
   echo "-d = ${project_directory}"
   ;;

   p)
   initiate_project=${OPTARG}
   echo "-p = ${make_dirs}"
   ;;
   
   f)
   set_fastq=${OPTARG}
   echo "-f = ${set_fastq}"
   ;;
   
   
   esac
done

###########################################################################################
## Check options passed in.
#
if test -z "$2"
  then
  usage_ngseasy
  exit 1
fi

###########################################################################################
## check file and directory exist.
#
if [[ ! -e "${config_tsv}" ]] 
  then
	  usage_ngseasy;
	  logger_ngseasy "[ngseasy]:ERROR : ${config_tsv} does not exist\n"
	  exit 1;
fi

########################################################################################################
## check Num feilds in  ${config_tsv}
#
logger_ngseasy "[ngseasy_fastqc]:Reading [${config_tsv}] "

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

if [[  "$numcols" -lt 22 ]] 
then
    logger_ngseasy "[ngseasy]:ERROR : [${config_tsv}] format issue. Check your file! "
    exit 1;
else 
    logger_ngseasy "[ngseasy]:Numcols of [${config_tsv}] ok [$numcols]...proceeding... "	    
fi


###########################################################################################
## check exists.
#
if [[ ! -d "${project_directory}" ]] 
  then
	  usage_ngseasy;
	  echo -e "[ngseasy]:ERROR :  ${project_directory} does not exist\n"
	  exit 1;
fi



###########################################################################################
## initiate projects 0-0-1
#

if [[ "${initiate_project}" -eq "1" ]]
then
    echo -e  "[ngseasy]:Calling ngseasy_initiate_project" 
    /bin/bash ngseasy_initiate_project -c ${config_tsv} -d ${project_directory}

else
    echo -e  "[ngseasy]:Assuming ngseasy_initiate_project already run. Project and Sample directories exist" 
fi


###########################################################################################
## initiate fastq files 0-0-2
# copy or move fastq files to project directories 

if [[ "${set_fastq}" -eq "1" ]]
then
    echo -e  "[ngseasy]:Calling ngseasy_initiate_fastq" 
    /bin/bash ngseasy_initiate_fastq -c ${config_tsv} -d ${project_directory}

else
    echo -e  "[ngseasy]:Assuming ngseasy_initiate_fastq already run. Sample fastq files exist and are in the right directories....ngseasy will check later" 
fi


###########################################################################################
## Make log file ##
#
touch ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y").log

###########################################################################################
## fastqc
#
if [[ "${FASTQC}" -eq "qc-fastq" ]]
then

logger_ngseasy "[ngseasy]:START ngseasy_fastqc" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

## check if ${config_tsv}.tmp exists and make it if it dont ####
#
if [[ ! -e "${config_tsv}.tmp" ]]
then
	logger_ngseasy "[ngseasy]:[cmd]:sed 1d ${config_tsv} > ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 
	
	sed 1d ${config_tsv} > ${config_tsv}.tmp
fi

## number of samples to run ####
#
numsamples=`wc -l ${config_tsv}.tmp | awk '{print $1}'`  
logger_ngseasy "[ngseasy_fastqc]:Number of samples [$numsamples]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

## number of cores available
#
mincpuallowed=8
numcores=`nproc`
logger_ngseasy "[ngseasy_fastqc]:Number of available cores [$numcores]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

## check if number of cpu less than 2 and exit if so ####
#
if [[ "$numcores" -lt 2 ]]
then
	logger_ngseasy "[ngseasy_fastqc]:Number of available cores less than 2. Exiting " ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 
	exit 1;
fi

## muber of jobs fastqc calls allowed to run at the same time ####
#
numjobsallowed=$(expr $numcores / 2)
logger_ngseasy "[ngseasy_fastqc]:Number of Jobs allowed [$numjobsallowed]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

## split config file into batches : N samples per batch. N samples == njobs
#
if [[ "$numsamples"  -gt "$numjobsallowed" ]]
then
	logger_ngseasy "[ngseasy_fastqc]:Number samples [$numsamples] greater than number of cpu jobs allowed [$numjobsallowed]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 
	logger_ngseasy "[ngseasy_fastqc]:splitting config file in to batches of at most [${numjobsallowed}] samples" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 
	logger_ngseasy "[ngseasy_fastqc]:[cmd]:split -d -l ${numjobsallowed} --additional-suffix=\".batch.config.tmp\" ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

	split -d -l ${numjobsallowed} --additional-suffix=".batch.${config_tsv}.tmp" ${config_tsv}.tmp
else
	cp ${config_tsv}.tmp original.batch.${config_tsv}.tmp
fi

## get file names to process ####
#
batchfiles=`ls | grep batch` 


## call ngseasy_fastqc ####
#
# config_tsv=test.config
# project_directory=/home/sjnewhouse/ngs_projects
#
ndockerjobs=0


for MYBATCH in `ls $batchfiles`
do
	logger_ngseasy "r -c ${MYBATCH} -d ${project_directory}" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 
	
	## call ngseasy_fastqc
	/bin/bash ngseasy_fastqc -c ${MYBATCH} -d ${project_directory}
	
	## get n jobs running in background
	ndockerjobs=`docker ps -a | grep ngseasy-fastqc | grep Up | wc -l`
	
	logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs started [$ndockerjobs]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y")
	
	## while jobs still running, ie not equal to 0, then sleep for 10 seconds
	while [ $ndockerjobs -gt 0 ]
	do
		sleep 1m
		ndockerjobs=`docker ps -a | grep fastqc | wc -l`
		logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$ndockerjobs]"
	done	

done



## remove docker containers ####
#
	logger_ngseasy "[ngseasy]:cleaning up container images" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y")	
	logger_ngseasy "[ngseasy]:[cmd]:docker rm -f \$(docker ps -a | grep fastqc  | grep Exited | awk '{print \$1}')" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y")
	
	docker rm -f $(docker ps -a | grep fastqc  | grep Exited | awk '{print $1}')

## rm tmp config files ####
#
	logger_ngseasy "[ngseasy]:cleaning up tmp config files" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y")
	logger_ngseasy "[ngseasy]:[cmd]:docker rm -f \$(docker ps -a | grep fastqc  | grep Exited | awk '{print \$1}')" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y")
	
	rm -v *.batch.${config_tsv}.tmp
	
	logger_ngseasy "[ngseasy]:END ngseasy_fastqc" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.$(date +"%d%m%y") 

## skip fastqc if required #### 
#
else

    logger_ngseasy "[ngseasy]:Skipping fastqc " ${HOME}/ngseasy_logs/ngseasy.${config_tsv} .$(date +"%d%m%y") 
fi



###################################################################################
## adapter and read/base quality trimming
if [[ "${TRIM}" -eq "qc-trim" ]]
then
    echo -e  "[ngseasy]:Calling ngseasy_trimmomatic" 
    logger_ngseasy "[ngseasy]:Calling ngseasy_trimmomatic" ${HOME}/ngseasy_logs/ngseasy.${config_tsv} .$(date +"%d%m%y")

    /bin/bash ngseasy_trimmomatic -c ${config_tsv} -d ${project_directory}
    
    rm 

else
    echo -e  "[ngseasy]:Skipping qc-trimming" 
    logger_ngseasy "[ngseasy]:Reading [${config_tsv}] " ${HOME}/ngseasy_logs/ngseasy.${config_tsv} .$(date +"%d%m%y")
fi

##-------------------------------------------------------------------------##
## alignment : includes addition of read groups at alignment stage 
## and then duplicate marking with samblaster and indexing and sorting with sambamba
## added SNAP aligner
## realignment includes bamleftalign
/bin/bash ngseasy_alignment -c ${config_tsv} -d ${project_directory}


##-------------------------------------------------------------------------##
## NGS Processing : Indel realignment and base quality score reclibration using GATK or BamUtil/ogap
if [[ "${GATK}" -eq 1 ]] && [[ "${REALN}" -eq 1 ]] && [[ "${BSQR}" -eq 1 ]]
then
    echo -e  "[ngseasy]:running gatk indel realignment and base quality score recalibration"

    echo -e  "[ngseasy]:Calling ngseasy_indel_realn" 
    
    /bin/bash ngseasy_indel_realn -c ${config_tsv} -d ${project_directory}
  
    echo -e  "[ngseasy]:Calling ngseasy_base_recal"
    
   /bin/bash  ngseasy_base_recal -c ${config_tsv} -d ${project_directory}
    
elif [[ "${GATK}" -eq 1 ]] && [[ "${REALN}" -eq 0 ]] && [[ "${BSQR}" -eq 1 ]]
then

  /bin/bash ngseasy_base_recal -c ${config_tsv} -d ${project_directory}

elif [[ "${GATK}" -eq 0 ]] && [[ "${REALN}" -eq 1 ]] && [[ "${BSQR}" -eq 1 ]]
then

  #ngseasy_ogap_realn -c ${config_tsv} -d ${project_directory}
  /bin/bash ngseasy_bamutil_base_recal -c ${config_tsv} -d ${project_directory}

elif [[ "${GATK}" -eq 0 ]] && [[ "${REALN}" -eq 0 ]] && [[ "${BSQR}" -eq 1 ]]
then

  /bin/bash ngseasy_bamutil_base_recal -c ${config_tsv} -d ${project_directory}
  
fi

##-------------------------------------------------------------------------##
## Alignment statistics
/bin/bash ngseasy_alignment_qc -c ${config_tsv} -d ${project_directory}

##-------------------------------------------------------------------------##
## SNP/INDEL calling
/bin/bash ngseasy_variant_calling -c ${config_tsv} -d ${project_directory}
 
/bin/bash ngseasy_variant_calling_fast_ensemble -c ${config_tsv} -d ${project_directory}

##-------------------------------------------------------------------------##
## CNV Calling

##-------------------------------------------------------------------------##
## Annotation

##-------------------------------------------------------------------------##
## NGS Report

